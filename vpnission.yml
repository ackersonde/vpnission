# sudo kubectl scale deployment/vpnission --replicas=0; sudo kubectl scale deployment/vpnission --replicas=1
# Show current value: sudo kubectl describe configmap protonvpn | grep '\b-[0-9]'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpnission-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      run: mountusb-mediaserver # needs to be on server attached to Media drive
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        run: mountusb-mediaserver
    spec:
      restartPolicy: Always
      nodeSelector:
        mountusb: mediaserver
      containers:
      - image: danackerson/vpnission:vg{{GITHUB_RUN_ID}}
        imagePullPolicy: Always
        name: vpnission-ctr
        ports:
          - name: transmission
            containerPort: 9091
#        readinessProbe: ? or
#        livenessProbe:
#          httpGet:
#            path: /ping
#            port: transmission
#          failureThreshold: 3
#          initialDelaySeconds: 10
#          periodSeconds: 10
#          successThreshold: 1
#          timeoutSeconds: 2
        envFrom:
          - secretRef:
              name: vpnission-env-secrets
        env:
          - name: PROTONVPN_SERVER
            valueFrom:
              configMapKeyRef:
                name: protonvpn
                key: server
        #args: ["$(PROTONVPN_SERVER)"]
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        volumeMounts:
          - name: media-volume
            mountPath: /mnt/torrents
      volumes:
        - name: media-volume
          hostPath:
            path: /mnt/usb4TB/DLNA/torrents

---
apiVersion: v1
kind: Secret
metadata:
  name: vpnission-env-secrets
data:
  GITHUB_RUN_ID: {{GITHUB_RUN_ID_B64}}
  CTX_PLEX_TOKEN: {{CTX_PLEX_TOKEN_B64}}
  CTX_VPN_EAP_ID: {{CTX_VPN_EAP_ID_B64}}
  CTX_VPN_SECRET: {{CTX_VPN_SECRET_B64}}
  TRANSMISSION_HOST_NAME: {{TRANSMISSION_HOST_NAME_B64}}
  PROTON_SERVER: {{PROTONVPN_SERVER}}

---
apiVersion: v1
kind: Service
metadata:
  name: vpnission
  namespace: default
spec:
  ports:
    - name: vpnission
      protocol: TCP
      port: 9091
      targetPort: 9091

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: vpnission-ingress
  namespace: default
spec:
  entryPoints:
    - web
    - secure
  routes:
  - match: Host(`vpnission.ackerson.de`)
    middlewares:
    - name: tls-redirect
    - name: api-auth
    - name: careful-ratelimit
    kind: Rule
    services:
    - name: vpnission
      port: 9091
