name: Deploy Transmission under IPSec

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN: ${{ secrets.CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN }}
      CTX_DIGITALOCEAN_FIREWALL: ${{ secrets.CTX_DIGITALOCEAN_FIREWALL }}
      CTX_SSH_DEPLOY_FINGERPRINT: ${{ secrets.CTX_SSH_DEPLOY_FINGERPRINT }}
      SSH_CXN: ${{ secrets.CTX_IPV6_SLAVE_HOME }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - name: Build application and docker image
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register
          docker build --compress -t danackerson/vpnission:vg$GITHUB_RUN_ID .

          docker login -u ${{ secrets.CTX_DOCKER_USER }} -p ${{ secrets.CTX_DOCKER_PASS }}
          docker tag danackerson/vpnission:vg$GITHUB_RUN_ID danackerson/vpnission:latest
          docker push danackerson/vpnission:vg$GITHUB_RUN_ID
          docker push danackerson/vpnission:latest

      - name: Prepare environment and deploy
        run: |
          git clone https://github.com/ackersonde/digitaloceans.git
          cd digitaloceans
          go get -t -d -v ./...
          go build do.go
          cd ../

          echo "GITHUB_RUN_ID=$GITHUB_RUN_ID" > vpnission.env.list
          echo "CTX_VPN_EAP_ID=${{ secrets.CTX_VPN_EAP_ID }}" >> vpnission.env.list
          echo "CTX_VPN_SECRET=${{ secrets.CTX_VPN_SECRET }}" >> vpnission.env.list
          echo "TRANSMISSION_HOST_NAME=${{ secrets.TRANSMISSION_HOST_NAME }}" >> vpnission.env.list

          cat <<DEPLOY_EOF >deploy-vpnission.sh
          #!/usr/bin/bash
          scp -o StrictHostKeyChecking=no vpnission.env.list ubuntu@$SSH_CXN:~/.config/
          ssh ubuntu@$SSH_CXN << EOF
            sudo docker rm -f vpnission || true
            sudo docker pull danackerson/vpnission
            sudo docker run --env-file .config/vpnission.env.list -d \
              --name vpnission --cap-add NET_ADMIN -p9091:9091 -p51413:51413 \
              --restart always -v /mnt/usb4TB/DLNA/torrents:/mnt/torrents \
              danackerson/vpnission:vg$GITHUB_RUN_ID
          EOF
          DEPLOY_EOF
          chmod 700 deploy-vpnission.sh

          mkdir ~/.ssh
          cat <<EOF >~/.ssh/id_rsa
          ${{ secrets.CTX_DIGITALOCEAN_SSH_PRIVKEY }}
          EOF
          chmod 400 ~/.ssh/id_rsa

          public_ip_address=$(curl -s https://checkip.amazonaws.com)
          ./digitaloceans/do -fn=firewallSSH -allow=true -ip=$public_ip_address -tag=traefik

          scp -o StrictHostKeyChecking=no vpnission.env.list deploy-vpnission.sh root@ackerson.de:~/
          ssh root@ackerson.de ./deploy-vpnission.sh
          ssh root@ackerson.de rm vpnission.env.list deploy-vpnission.sh

          rm -Rf .ssh/ deploy-vpnission.sh vpnission.env.list
          ./digitaloceans/do -fn=firewallSSH -allow=false -ip=$public_ip_address

          curl -s -o /dev/null -X POST -d token=${{ secrets.CTX_SLACK_NOTIFICATIONS_TOKEN }} -d channel=C092UE0H4 \
            -d text="<https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID | $GITHUB_REPOSITORY @ $GITHUB_RUN_ID>" \
            https://slack.com/api/chat.postMessage
