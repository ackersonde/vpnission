name: Deploy Transmission under IPSec

on:
  push:
    branches: [ main, ipsec-docker ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Build application and docker image
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register
          docker build --compress -t danackerson/vpnission:vg$GITHUB_RUN_ID .

          docker login -u ${{ secrets.CTX_DOCKER_USER }} -p ${{ secrets.CTX_DOCKER_PASS }}
          docker tag danackerson/vpnission:vg$GITHUB_RUN_ID danackerson/vpnission:latest
          docker push danackerson/vpnission:vg$GITHUB_RUN_ID
          docker push danackerson/vpnission:latest

      - name: Prepare K8S bundle config
        run: |
          echo "GITHUB_RUN_ID=$GITHUB_RUN_ID" > vpnission.env.list
          echo "CTX_PLEX_TOKEN=${{ secrets.CTX_PLEX_TOKEN }}" >> vpnission.env.list
          echo "CTX_VPN_EAP_ID=${{ secrets.CTX_VPN_EAP_ID }}" >> vpnission.env.list
          echo "CTX_VPN_SECRET=${{ secrets.CTX_VPN_SECRET }}" >> vpnission.env.list
          echo "TRANSMISSION_HOST_NAME=${{ secrets.TRANSMISSION_HOST_NAME }}" >> vpnission.env.list

      - name: Create wireguard tunnel configuration
        run: |
          sudo apt-get install wireguard resolvconf
          echo "${{ secrets.CTX_WIREGUARD_GITHUB_ACTIONS_CLIENT_CONFIG }}" | sudo tee /etc/wireguard/tunnel.conf

      - name: Prepare ssh key for remote login
        run: |
          mkdir ~/.ssh/
          echo "${{ secrets.CTX_SERVER_DEPLOY_SECRET_B64 }}" | base64 -d > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "${{ secrets.CTX_SERVER_DEPLOY_CACERT_B64 }}" | base64 -d > ~/.ssh/id_ed25519-cert.pub

      - name: Deploy to K8S
        env:
          SSH_CXN: ${{ secrets.CTX_K8S_SSH_USER }}@vpnpi
        run: |
          ssh-keygen -L -f ~/.ssh/id_ed25519-cert.pub
          wg-quick up tunnel

          scp -o StrictHostKeyChecking=no vpnission.env.list $SSH_CXN:~/.config/
          ssh $SSH_CXN << EOF
            sudo docker rm -f vpnission || true
            sudo docker run --env-file .config/vpnission.env.list -d \
              --name vpnission --cap-add NET_ADMIN -p9091:9091 -p51413:51413 \
              -v /mnt/usb4TB/DLNA/torrents:/mnt/torrents \
              danackerson/vpnission:vg$GITHUB_RUN_ID
          EOF

          wg-quick down tunnel

          rm -Rf ~/.ssh ~/vpnission.env.list

          curl -s -o /dev/null -X POST -d token=${{ secrets.CTX_SLACK_NOTIFICATIONS_TOKEN }} -d channel=C092UE0H4 \
            -d text="<https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID | $GITHUB_REPOSITORY @ $GITHUB_RUN_ID>" \
            https://slack.com/api/chat.postMessage
